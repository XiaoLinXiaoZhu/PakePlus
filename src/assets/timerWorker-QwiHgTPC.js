(function(){"use strict";let t=null,n=[],l=0,o=!1;onmessage=e=>{const a=e.data;if(a.type==="START"){const{totalTime:u,workMin:r,workMax:i,restTime:s}=a.payload;n=E(u,r,i,s),l=0,o=!1,postMessage({type:"UPDATE_SEGMENTS",payload:{segments:n}}),postMessage({type:"UPDATE_CURRENT_SEGMENT_INDEX",payload:{index:l}}),p()}a.type==="PAUSE"&&(o=!0),a.type==="RESUME"&&(o=!1,p()),a.type==="CANCEL"&&(t!==null&&clearInterval(t),t=null,n=[],l=0,o=!1)};function E(e,a,u,r){const i=[];let s=e;for(;s>0;){const f=Math.floor(Math.random()*(u-a+1))+a;if(f<=s)i.push({isRest:!1,duration:f,timeLeft:f,progress:0}),s-=f;else{i.push({isRest:!1,duration:s,timeLeft:s,progress:0});break}s>=r&&(i.push({isRest:!0,duration:r,timeLeft:r,progress:0}),s-=r)}return i}function p(){t!==null&&clearInterval(t),t=setInterval(()=>{if(o)return;const e=n[l];if(!e){clearInterval(t),t=null;return}e.timeLeft>0?(e.timeLeft--,e.progress=(e.duration-e.timeLeft)/e.duration*100,postMessage({type:"UPDATE_SEGMENTS",payload:{segments:n}})):(clearInterval(t),t=null,postMessage({type:"SEGMENT_FINISHED",payload:{isRest:e.isRest}}),l++,l<n.length&&(postMessage({type:"UPDATE_CURRENT_SEGMENT_INDEX",payload:{index:l}}),p()))},1e3)}})();
